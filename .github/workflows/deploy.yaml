# 将静态内容部署到 GitHub Pages 的简易工作流程
name: Build and Deploy # 工作流名称 如省略使用当前文件名
run-name: Deploy by @${{ github.actor }} - ${{ github.event.head_commit.message }} # 工作流运行时的名称 作者+最新提交信息 如省略显示提交时的commit信息

on:
  # 监听push动作,仅在推送到默认分支时运行。
  push:
    branches: ['main']

  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages。
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发的部署
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # 定义一个名为 deploy 的工作流
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # clone 该仓库源码到工作流中
      - name: Checkout
        uses: actions/checkout@v4
        # 设置node环境,指定node版本为20,并缓存npm包提升后续执行速度
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
        # 安装项目依赖
      - name: Install dependencies
        run: npm install
        # 执行构建
      - name: Build
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload dist repository
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

       - name: Deploy to GitHub Pages
        # 此actions的官方文档 https://github.com/JamesIves/github-pages-deploy-action
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 要部署的文件夹，必填，build 构建后的打包文件夹
          FOLDER: dist
          # 希望部署的分支，默认gh-pages
          BRANCH: gh-pages
          # 默认情况是不需要填的，如果您需要更多权限，例如部署到另一个存储库才需要填写
          # 仓库范围的访问令牌，可以将个人令牌的值存储在 GitHub Secrets 中
          TOKEN: ${{ secrets.ACCESS_TOKEN }}
          # 部署到GitHub的不同仓库 <用户名>/<仓库名>
          # 此选项必须配置了TOKEN才能正常执行
          REPOSITORY-NAME: LAF523/eslintTest

